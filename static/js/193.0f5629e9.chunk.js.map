{"version":3,"file":"static/js/193.0f5629e9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/InputForm/InputForm.module.css?12f1","components/InputForm/InputForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","views/ContactsView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Section\":\"Section_Section__cTDcW\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles['Section']}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"InputForm\":\"InputForm_InputForm__dHL-R\",\"InputForm__label\":\"InputForm_InputForm__label__1kNad\",\"InputForm__input\":\"InputForm_InputForm__input__YyxD0\",\"InputForm__button\":\"InputForm_InputForm__button__QLVi9\"};","// import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport styles from './InputForm.module.css';\n\nfunction InputForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => {\n    dispatch(addContact(name, number));\n  };\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return new Error('');\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    resetForm();\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles['InputForm']} onSubmit={handleFormSubmit}>\n      <label className={styles['InputForm__label']}>\n        Name\n        <input\n          className={styles['InputForm__input']}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={styles['InputForm__label']}>\n        Number\n        <input\n          className={styles['InputForm__input']}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={styles['InputForm__button']} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nexport default InputForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"InputForm\":\"Filter_InputForm__m2Ubx\",\"InputForm__label\":\"Filter_InputForm__label__vMmTj\",\"InputForm__input\":\"Filter_InputForm__input__MTMWw\"};","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <label className={styles['InputForm__label']} htmlFor={filter}>\n      Find contacts by name\n      <input\n        className={styles['InputForm__input']}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"Contacts__list\":\"Contacts_Contacts__list__G7WyB\",\"Contacts__item\":\"Contacts_Contacts__item__rHHfk\",\"Contacts__name\":\"Contacts_Contacts__name__sxyG2\",\"Contacts__button\":\"Contacts_Contacts__button__vIcRV\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './Contacts.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, getContacts } from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const filteredContacts = (contacts, filter) => {\n    const lowerCase = filter.toLowerCase();\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(lowerCase);\n    });\n  };\n  const contacts = useSelector(state =>\n    filteredContacts(state.contacts.items, state.contacts.filter)\n  );\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={styles['Contacts__list']}>\n          {contacts.map(({ name, number, id }) => (\n            <li className={styles['Contacts__item']} key={id}>\n              <p className={styles['Contacts__name']}>{name}</p>\n              <p className={styles['Contacts__number']}>{number}</p>\n              <button\n                className={styles['Contacts__button']}\n                type=\"button\"\n                onClick={id => dispatch(deleteContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nContacts.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func,\n};\n\nexport default Contacts;\n","import Section from '../components/Section/Section';\nimport InputForm from '../components/InputForm/InputForm';\nimport Filter from '../components/Filter/Filter';\nimport Contacts from '../components/Contacts/Contacts';\n\nconst ContactsView = () => {\n  return (\n    <>\n      <Section title=\"PhoneBook\">\n        <InputForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <Contacts />\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsView;\n"],"names":["title","children","className","styles","useState","name","setName","number","setNumber","dispatch","useDispatch","handleInputChange","e","target","value","Error","resetForm","onSubmit","preventDefault","addContact","type","onChange","pattern","required","filter","useSelector","state","htmlFor","changeFilter","currentTarget","useEffect","getContacts","contacts","lowerCase","toLowerCase","contact","includes","filteredContacts","items","length","map","id","onClick","deleteContact"],"sourceRoot":""}